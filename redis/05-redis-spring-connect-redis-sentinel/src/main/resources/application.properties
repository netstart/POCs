server.port = 8080

# ou mip-redis-master
#spring.redis.host=mip-redis-headless
#spring.redis.port=6379

spring.redis.sentinel.master=mipmaster
# ou mip-redis-headless:26379
spring.redis.sentinel.nodes=mip-redis:26379
#spring.redis.sentinel.password=PasswordToAccessRedis
spring.redis.password=PasswordToAccessRedis

# my-release-redis:6379
# my-release-redis:26379
# my-release-redis-headless:6379 
# my-release-redis-headless:26379
# my-release-redis-metrics:9121



# A linha a baixo faz com que, ao usar @Cacheble o cache seja no redis
# spring.cache.type=redis

#spring.redis.host=mip-redis-headless:6379
#spring.redis.port=7001

#spring.redis.cluster.nodes=127.0.0.1:7001, 127.0.0.1:7002, 127.0.0.1:7003 
#spring.redis.cluster.nodes=127.0.0.1:6379
#spring.redis.cluster.max-redirects=6


#spring.redis.host=my-release-redis-cluster-headless
#spring.redis.host=my-release-redis-cluster
#spring.redis.port=6379

#spring.redis.password=abobrinha

#spring.redis.cluster.nodes=my-release-redis-cluster:6379
#spring.redis.cluster.max-redirects=6



# https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html#data-properties
# REDIS (RedisProperties)
#spring.redis.cluster.max-redirects= # Maximum number of redirects to follow when executing commands across the cluster.
#spring.redis.cluster.nodes= # Comma-separated list of "host:port" pairs to bootstrap from.
#spring.redis.database=0 # Database index used by the connection factory.
#spring.redis.url= # Connection URL, will override host, port and password (user will be ignored), e.g. redis://user:password@example.com:6379
#spring.redis.host=localhost # Redis server host.
#spring.redis.password= # Login password of the redis server.
#spring.redis.ssl=false # Enable SSL support.
#spring.redis.pool.max-active=8 # Max number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.
#spring.redis.pool.max-idle=8 # Max number of "idle" connections in the pool. Use a negative value to indicate an unlimited number of idle connections.
#spring.redis.pool.max-wait=-1 # Maximum amount of time (in milliseconds) a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.
#spring.redis.pool.min-idle=0 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.
#spring.redis.port=6379 # Redis server port.
#spring.redis.sentinel.master= # Name of Redis server.
#spring.redis.sentinel.nodes= # Comma-separated list of host:port pairs.
#spring.redis.timeout=0 # Connection timeout in milliseconds.


