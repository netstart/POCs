<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation=" 
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-autowire="byName">

	<context:component-scan base-package="com.github.dao" />
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="environmentVariablesConfiguration" class="org.jasypt.encryption.pbe.config.SimplePBEConfig">
		<property name="algorithm" value="PBEWithMD5AndDES" />
		<property name="password" value="keyToEncryptor" />
	</bean>

	<bean id="configurationEnc" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
		<property name="config" ref="environmentVariablesConfiguration" />
	</bean>

	<bean id="propertyConfigurer"
		class="org.jasypt.spring.properties.EncryptablePropertyPlaceholderConfigurer">
		<constructor-arg ref="configurationEnc" />
		<property name="locations" value="test.jdbc.properties" />
	</bean>

	<bean id="dataSource" destroy-method="close"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${SMT.jdbc.driverClassName}" />
		<property name="url" value="${SMT.jdbc.url}" />
		<property name="username" value="${SMT.jdbc.username}" />
		<property name="password" value="${SMT.jdbc.password}" />
		<property name="maxActive" value="300" />
		<property name="maxWait" value="1000" />
		<property name="poolPreparedStatements" value="true" />
	</bean>

	<bean id="liquibaseTestSmt" class="liquibase.integration.spring.SpringLiquibase">
		<property name="dataSource" ref="dataSource" />
		<property name="changeLog" value="classpath:/liquidbase/SystemLiquidBase.xml" />
		<property name="contexts" value="test" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">

		<property name="packagesToScan">
			<array>
				<!-- <value>com.github</value> -->
				<value>com.github.entity</value>
			</array>
		</property>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${SMT.jdbc.dialect}</prop>
				<prop key="hibernate.max_fetch_depth">9</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.use_sql_comments">true</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.SingletonEhCacheProvider</prop>
				<prop key="hibernate.cglib.use_reflection_optimizer">true</prop>
			</props>
		</property>

	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="persistenceExceptionInterceptor"
		class="org.springframework.dao.support.PersistenceExceptionTranslationInterceptor" />


	<aop:config proxy-target-class="true">
		<aop:pointcut expression="execution(* com.github.dao.DaoHibernate.*(..))"
			id="daoSupportOperation" />

		<aop:advisor pointcut-ref="daoSupportOperation"
			advice-ref="persistenceExceptionInterceptor" />
	</aop:config>

</beans>
